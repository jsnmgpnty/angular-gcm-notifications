var angularGcmNotifications=angular.module("angularGcmNotifications",[]);angularGcmNotifications.factory("gcmService",["$http","$q","gcmProvider","$interval",function(a,b,c,d){var e=!1,f=c.getNotificationsApiUrl(),g=c.getSubscribeServerUrl(),h=c.getUnsubscribeServerUrl(),i=c.getErrorIcon(),j=c.getDefaultIcon(),k=c.getServiceWorkerUrl(),l=null,m=!1,n=function(c){if(c.endpoint.indexOf("https://android.googleapis.com/gcm/send")>-1){var d=c.endpoint.split("/");l=d[d.length-1]}var e=b.defer();return a({url:g+l,method:"GET"}).success(function(a){e.resolve(a)}).error(function(a){e.reject(a)}),e.promise},o=function(c){if(c.endpoint.indexOf("https://android.googleapis.com/gcm/send")>-1){var d=c.endpoint.split("/");l=d[d.length-1]}var e=b.defer();return a({url:h+l,method:"GET"}).success(function(a){pushSubscription.unsubscribe().then(function(b){m=!1,e.resolve(a)})["catch"](function(a){console.log("Unsubscription error: ",a),m=!1,e.reject(a)})}).error(function(a){e.reject(a)}),e.promise},p=function(){return"showNotification"in ServiceWorkerRegistration.prototype?"denied"===Notification.permission?void console.warn("The user has blocked notifications."):"PushManager"in window?void navigator.serviceWorker.ready.then(function(a){a.pushManager.getSubscription().then(function(a){e=!0,a&&n(a).then(function(a){var b={deviceId:a,notificationsApi:f,errorIcon:i,defaultIcon:j};navigator.serviceWorker.controller.postMessage(b)})})["catch"](function(a){console.warn("Error during getSubscription()",a)})}):void console.warn("Push messaging isn't supported."):void console.warn("Notifications aren't supported.")},q=function(){navigator.serviceWorker.ready.then(function(a){a.pushManager.getSubscription().then(function(a){if(!a)return void(m=!1);var b=a.subscriptionId;o(b)})["catch"](function(a){console.error("Error thrown while unsubscribing from push messaging.",a)})})},r=function(){navigator.serviceWorker.ready.then(function(a){a.pushManager.subscribe({userVisibleOnly:!0}).then(function(a){return m=!0,n(a)})["catch"](function(a){"denied"===Notification.permission?console.warn("Permission for Notifications was denied"):console.error("Unable to subscribe to push.",a),m=!1})})};return{togglePushState:function(a){return"undefined"==typeof a?(m=!m,m?r():q(),m):(m=a,m?r():q(),m)},initialize:function(){"serviceWorker"in navigator?navigator.serviceWorker.register(k).then(p):console.warn("Service workers aren't supported in this browser.")},subscribe:function(){r()},unsubscribe:function(){q()}}}]),angularGcmNotifications.provider("gcmProvider",[function(){var a="",b=null,c=null,d=null,e=null,f=null;this.$get=[function(){return{getNotificationsApiUrl:function(){return a},getSubscribeServerUrl:function(){return b},getUnsubscribeServerUrl:function(){return c},getErrorIcon:function(){return d},getDefaultIcon:function(){return e},getServiceWorkerUrl:function(){return f},setNotificationsApiUrl:function(b){a=b},setSubscribeServerUrl:function(a){b=a},setUnsubscribeServerUrl:function(a){c=a},setErrorIcon:function(a){d=a},setDefaultIcon:function(a){e=a},setServiceWorkerUrl:function(a){f=a}}}]}]);